@inject ILocalStorageService LS

@if (Variant == "full")
{
    <div class="dark-mode-switch @isDarkMode" @onclick=@Switch variant="full" role="switch"
     aria-label=@ariaLabel tabindex="0">
        <div class="@darkMode switch">
            <span aria-hidden="true" class="google-symbols">@modeIcon</span>
            @ariaLabel
        </div>
    </div>
}
else
{
    <div class="dark-mode-switch @isDarkMode" @onclick=@Switch role="switch"
     aria-label=@ariaLabel tabindex="0" variant="compact">
        <div class="track @isDarkMode">
            <div class="dark-mode switch">
                <span aria-hidden="true"
                  class="google-symbols">dark_mode</span>
            </div>
            <div class="light-mode switch">
                <span aria-hidden="true"
                  class="google-symbols">light_mode</span>
            </div>
        </div>
    </div>
}

@code {
    private string? darkMode;
    private string? modeIcon;
    private string? ariaLabel;
    private string? isDarkMode;

    protected override async Task OnInitializedAsync()
    {
        bool x = await LS.ContainKeyAsync("dark mode");
        if (x)
        {
            x = await LS.GetItemAsync<bool>("dark mode");
            if (x)
            {
                modeIcon = "light_mode";
                ariaLabel = "Switch to light mode";
                darkMode = "light-mode";
                isDarkMode = "is-dark-mode";
            }
            else
            {
                modeIcon = "dark_mode";
                ariaLabel = "Switch to dark mode";
                darkMode = "dark mode";
                isDarkMode = String.Empty;
            }
        }
        else
        {
            await LS.SetItemAsync<bool>("dark mode", false);
        }
    }

    private async Task Switch(EventArgs e)
    {
        bool mode = await LS.GetItemAsync<bool>("dark mode");
        await LS.SetItemAsync<bool>("dark mode", !mode);
        if (!mode)
        {
            modeIcon = "light_mode";
            ariaLabel = "Switch to light mode";
            darkMode = "light-mode";
            isDarkMode = "is-dark-mode";
        }
        else
        {
            modeIcon = "dark_mode";
            ariaLabel = "Switch to dark mode";
            darkMode = "dark-mode";
            isDarkMode = String.Empty;
        }
        await OnClickCallback.InvokeAsync(e);
    }

    [Parameter] public string? Variant { get; set; }
    [Parameter] public EventCallback OnClickCallback { get; set; }
}